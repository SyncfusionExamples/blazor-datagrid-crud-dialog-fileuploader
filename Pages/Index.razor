@page "/"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using System.IO

<SfGrid AllowPaging="true" @ref="MyGrid" DataSource="@Orders" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })">
    <GridEvents OnActionBegin="BeginHandler" OnActionComplete="ActionComplete" TValue="Order"></GridEvents>
    <GridEditSettings AllowEditing="true" AllowDeleting="true" AllowAdding="true" Mode="EditMode.Dialog">
        <Template>
            @{
                var Order = (context as Order);
            }
            <div>
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <span>Employee Name</span>
                            </td>
                            <td>
                                <b style="margin-left: -50px;">@Order.CustomerID</b><br>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span>Employee Image</span>
                            </td>
                            <td>
                                <div class="image"><img class="upload-image" style="margin-top: 10px;margin-left: -50px;" src="@Order.Imagesrc" /></div>
                            </td>
                        </tr>
                        <tr>
                            <div class="image" style="margin-top: 10px; width: 300px">
                                <SfUploader ID="uploadFiles" AllowedExtensions=".jpg,.png,.jpeg">
                                    <UploaderEvents ValueChange="OnChange" FileSelected="Selected"></UploaderEvents>
                                    <UploaderTemplates>
                                        <Template Context="HttpContext">
                                            @{
                                                <table>
                                                    <tr>
                                                        <td>
                                                            <span>Updated Employee Image</span>
                                                        </td>
                                                        <td>
                                                            <img class="upload-image" style="margin-left:10px;" src="@(files.Count >0 ? files.Where(item=>item.Name == HttpContext.Name)?.FirstOrDefault()?.Path : string.Empty)">
                                                        </td>
                                                    </tr>
                                                </table>
                                            }
                                        </Template>
                                    </UploaderTemplates>
                                </SfUploader>
                            </div>
                        </tr>
                    </tbody>
                </table>
            </div>
        </Template>
    </GridEditSettings>
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Employee ID" IsPrimaryKey="true" TextAlign="@TextAlign.Center" Width="140"></GridColumn>
        <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Employee Name" Width="140"></GridColumn>
        <GridColumn Field="Imagesrc" HeaderText="Employee Image" Width="200">
            <Template>
                @{
                    var imageUrl = (context as Order).Imagesrc;
                    <div class="image">
                        <img src="@imageUrl" />
                    </div>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>
<style>
    .image img {
        height: 55px;
        width: 55px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>

@code {

    public List<fileInfo> files = new List<fileInfo>();
    public SfGrid<Order> MyGrid { get; set; }
    public string UploadedFile { get; set; }
    public List<Order> Orders { get; set; }

    public void ActionComplete(ActionEventArgs<Order> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Add) || args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.BeginEdit))
        {
            MyGrid.PreventRender(false);
        }
    }

    public void OnChange(UploadChangeEventArgs args)
    {
        files = new List<fileInfo>();
        foreach (var file in args.Files)
        {
            var path = Path.GetFullPath("wwwroot\\scripts\\Images\\Employees\\") + file.FileInfo.Name;
            FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
            files.Add(new fileInfo() { Path = "scripts/Images/Employees/" + file.FileInfo.Name, Name = file.FileInfo.Name, Size = file.FileInfo.Size });
        }
    }

    public void BeginHandler(ActionEventArgs<Order> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save && Args.Action == "Add")
        {
            Args.Data.Imagesrc = "scripts/Images/Employees/" + UploadedFile;
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save && Args.Action == "Edit")
        {
            Args.Data.Imagesrc = "scripts/Images/Employees/" + UploadedFile;
        }

    }

    public void Selected(SelectedEventArgs Args)
    {
        UploadedFile = Args.FilesData[0].Name;

    }

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 9).Select(x => new Order()
            {
                OrderID = 1000 + x,
                EmployeeID = x,
                CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Imagesrc = "scripts/Images/Employees/" + x + ".png",
                Freight = 2.1 * x,
                OrderDate = DateTime.Now.AddDays(-x),
            }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public int EmployeeID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public string Imagesrc { get; set; }
        public double? Freight { get; set; }
    }

    public class fileInfo
    {
        public string Path { get; set; }
        public string Name { get; set; }
        public double Size { get; set; }
    }
}
